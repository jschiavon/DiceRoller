on:
  push:
    tags:
      - release-*

name: Handle Release

env:
  BUILD_TYPE: Release
 
jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build_assets:
    name: Build assets
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
        - os: macos-latest
          host: mac
          sysname: Darwin
          
        - os: ubuntu-latest
          host: linux
          sysname: Linux
          
        - os: windows-latest
          host: windows
          sysname: Windows
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1  # not v2!
        with:
            path: ../Qt
            key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          host: ${{matrix.host}}
          
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        
      - name: Upload release assets Unix
        if: matrix.os != 'windows-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/${{ matrix.artifact_name }}-*
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          
      
      - name: Upload release assets Win
        if: matrix.os == 'windows-latest'
        uses: alexellis/upload-assets@0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./build/Release/DiceRoller-*"]'
        

  
